[tool.poetry]
name = "microovn-rebuilder"
version = "0.1.0"
description = "Script for leveraging MicroOVN in OVN development process"
authors = ["Martin Kalcok <martin.kalcok@gmail.com>"]
readme = "README.md"
include = ["default_config.yaml"]

[tool.poetry.dependencies]
python = "^3.12"
pyyaml = "^6.0.2"

[tool.poetry.scripts]
microovn-rebuilder = "microovn_rebuilder.cli:main"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
tox = "^4.23.2"
isort = "^5.13.2"
mypy = "^1.13.0"
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"
coverage = "^7.6.9"

[tool.black]
line-length = 89

[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 89

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
disallow_untyped_defs = true
disallow_untyped_calls = true

[tool.tox.env_run_base]
skip_install = true
allowlist_externals = ["poetry"]
commands_pre = [["poetry", "install"]]

[tool.tox.env.lint]
description = "Run static code check and lints on the code"
commands = [
    ["poetry", "run", "black", "--check", "microovn_rebuilder/", "tests/unit/"],
    ["poetry", "run", "isort", "--check", "microovn_rebuilder/", "tests/unit/"],
    ["poetry", "run", "mypy", "--install-types", "--non-interactive", "microovn_rebuilder/"],
]

[tool.tox.env.format]
description = "Run code formatters"
commands = [
    ["poetry", "run", "black", "microovn_rebuilder/", "tests/unit/"],
    ["poetry", "run", "isort", "microovn_rebuilder/", "tests/unit/"],
]

[tool.tox.env.unit]
description = "Run unit tests (including required coverage)"
commands = [
    ["poetry", "run", "pytest", "--cov=microovn_rebuilder/", "--cov-report=json", "tests/unit/"],
    ["poetry", "run", "coverage", "report", "--fail-under=100"],
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
